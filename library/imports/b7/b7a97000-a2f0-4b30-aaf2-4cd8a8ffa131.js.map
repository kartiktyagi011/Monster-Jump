{"version":3,"sources":["assets\\Scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","minX","maxX","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n    \r\n    properties: {\r\n       \r\n        jumpHeight: 0,\r\n        \r\n        jumpDuration: 0,\r\n       \r\n        maxMoveSpeed: 0,\r\n        \r\n        accel: 0,\r\n       \r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n          minX : -480,\r\n          maxX :  480,\r\n    },\r\n\r\n    runJumpAction: function () {\r\n\r\n        var jumpUp = cc.tween().by(this.jumpDuration, { y: this.jumpHeight }, { easing: 'sineOut' });\r\n        var jumpDown = cc.tween().by(this.jumpDuration, { y: -this.jumpHeight }, { easing: 'sineIn' });\r\n        var tween = cc.tween()\r\n                        .sequence(jumpUp, jumpDown)\r\n                        .call(this.playJumpSound, this);\r\n        return cc.tween().repeatForever(tween);\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        \r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        \r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onLoad: function() {\r\n      \r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start()\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        \r\n        this.xSpeed = 0;\r\n\r\n       \r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);    \r\n    },\r\n\r\n    onDestroy () {\r\n        \r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },    \r\n\r\n    update: function (dt) {\r\n        \r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        \r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n           \r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        \r\n        this.node.x += this.xSpeed * dt;\r\n\r\n        if(this.node.x>this.maxX){\r\n            this.node.x = this.maxX;\r\n        }\r\n        if(this.node.x<this.minX){\r\n            this.node.x = this.minX;\r\n        }\r\n    },\r\n});\r\n"]}